#BlueJ class context
comment0.params=
comment0.target=Vehicle()
comment0.text=\r\n\ Parameterless/default\ constructor\ for\ Vehicle\ class\ <br>\r\n\ Setting\ default\ valus\ for\ all\ instance\ variables.\ <br>\r\n\ Year\ variable\ is\ calculated\ based\ on\ Selling\ Prince\ and\ Dealer\ Cost\ s\r\n
comment1.params=stockCode\ make\ model\ year
comment1.target=Vehicle(java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment1.text=\r\n\ Custom\ constructor\ which\ take\ Stock\ Code,\ Make\ Model\ and\ Year;\ <br>\r\n\ For\ Stock\ Code,\ Make\ and\ Model,\ it\ calls\ respected\ mutator\ method\ <br>\r\n\ Year\ is\ checked\ agains\ MIN\ and\ MAX\ value;\ <br>\ \r\n\ If\ Year\ passed,\ falls\ outside\ of\ perimeter\ the\ default\ value\ is\ set\ to\ 1978\r\n\ \r\n\ @param\ stockCode\ as\ String;\r\n\ @param\ make\ as\ String;\r\n\ @param\ model\ as\ String;\r\n\ @param\ year\ as\ Integer;\r\n
comment10.params=
comment10.target=double\ getDealerCost()
comment10.text=\r\n\ Public\ getter\ method\ taht\ returns\ a\ value\ of\ dealer\ cost;\ <br>\r\n\ It\ does\ not\ take\ any\ parameter;\r\n\ @return\ returns\ Dealer\ Cost\ value\ as\ Double\r\n
comment11.params=value
comment11.target=void\ setDealerCost(double)
comment11.text=\r\n\ Public\ method/setter\ that\ sets\ the\ value\ of\ dealer\ cost;\ <br>\r\n\ It\ validates\ passed\ paramets\ and\ make\ sure\ it\ is\ not\ a\ negative\ number;\r\n\ @return\ returns\ value\ of\ dealer\ cost\ as\ Double;\r\n
comment12.params=
comment12.target=double\ getSellingPrice()
comment12.text=\r\n\ Public\ getter/method\ to\ return\ value\ of\ the\ Selling\ Price;\ <br>\r\n\ It\ does\ not\ take\ a\ parameter;\ \r\n\ @return\ returns\ Selling\ Price\ as\ Double\r\n
comment13.params=newSellingPrice
comment13.target=void\ checkStandardSellingPrice(double)
comment13.text=\r\n\ Public\ method\ to\ check\ new\ selling\ price;\ <br>\r\n\ Price\ will\ be\ rejected\ if\ falls\ below\ 25%\ above\ dealer\ cost;\ <br>\r\n\ It\ does\ not\ return\ any\ value;\r\n\ @param\ newSellingPrice\ as\ double\ \r\n
comment14.params=
comment14.target=void\ calculateProfitMargin()
comment14.text=\r\n\ Public\ method\ that\ calculates\ and\ sets\ profitMargin\ based\ on\ sellingPrice\ and\ dealerCost;\ <br>\r\n\ It\ does\ not\ return\ any\ value\ and\ it\ does\ not\ take\ any\ parameter;\r\n
comment15.params=
comment15.target=double\ calculateProfit()
comment15.text=\r\n\ Public\ method\ that\ calculates\ Profit\ made\ in\ dolaras;\ <br>\r\n\ Calculation\ is\ made\ based\ on\ sellingPrice\ and\ dealerCost\r\n\ It\ does\ not\ take\ any\ parameter;\ <br>\r\n\ @return\ returns\ calculated\ value\ of\ the\ profit\ in\ dollar\ amount\r\n
comment16.params=
comment16.target=void\ printDetails()
comment16.text=\r\n\ Method\ to\ display\ summary\ of\ Vehicle\ details\ <br>\r\n\ It\ does\ not\ take\ any\ parametes\ <br>\r\n\ It\ does\ not\ return\ any\ value;\ <br>\r\n\ Prints\ details\ of\ the\ Vehicle\ class;\r\n
comment17.params=year
comment17.target=void\ printYearError(int)
comment17.text=\r\n\ Helper\ method\ to\ display\ error\ message\ when\ value\ of\ car's\ year\ falls\ out\ of\ designated\ range\r\n
comment18.params=_dealerCost\ _sellingPrice\ newSellingPrice
comment18.target=void\ displaySellingPriceError(double,\ double,\ double)
comment18.text=\r\n\ Helper\ method\ to\ display\ error\ message\ when\ selling\ price\ does\ not\ meet\ minimum,\r\n\ Minimum\ set\ to\ 25%\ above\ dealier\ cost\r\n
comment2.params=
comment2.target=java.lang.String\ getStockCode()
comment2.text=\r\n\ Public\ getter\ method\ to\ fetch\ the\ value\ of\ StockCode;\ <br>\r\n\ It\ does\ not\ take\ any\ parameters;\r\n\ @return\ gets\ back\ StockCode\ as\ String;\r\n
comment3.params=value
comment3.target=void\ setStockCode(java.lang.String)
comment3.text=\r\n\ Public\ setter\ to\ set\ the\ value\ of\ Stock\ Code;\ <br>\r\n\ It\ does\ not\ return\ any\ value;\ <br>\r\n\ @param\ value\ of\ the\ StockCode\ as\ String;\r\n
comment4.params=
comment4.target=java.lang.String\ getMake()
comment4.text=\r\n\ Public\ get\ method\ to\ fetch\ the\ value\ of\ Car's\ Make;\ <br>\r\n\ It\ does\ not\ take\ any\ parameter;\ <br>\r\n\ @return\ returns\ Make\ as\ String\r\n
comment5.params=value
comment5.target=void\ setMake(java.lang.String)
comment5.text=\r\n\ Public\ setter/method\ that\ sets\ the\ value\ of\ car\ make;\ <br>\r\n\ @param\ takes\ parameter\ value\ as\ String;\r\n
comment6.params=
comment6.target=java.lang.String\ getModel()
comment6.text=\r\n\ Public\ getter\ method\ to\ return\ Model\ name;\r\n\ @return\ gets\ Model\ as\ String\r\n
comment7.params=value
comment7.target=void\ setModel(java.lang.String)
comment7.text=\r\n\ Public\ setter\ mettor\ to\ set\ the\ valie\ of\ Car's\ Model\r\n\ @param\ sets\ the\ value\ of\ a\ Molel\ as\ String;\r\n
comment8.params=
comment8.target=int\ getYear()
comment8.text=\r\n\ Public\ getter\ method\ to\ return\ value\ of\ the\ Year\ set;\r\n\ @return\ returns\ Year\ as\ Integer\r\n
comment9.params=value
comment9.target=void\ setYear(int)
comment9.text=\r\n\ Public\ setter\ method\ to\ set\ the\ valie\ of\ car's\ year;\ <br>\r\n\ It\ does\ not\ return\ any\ value;\ <br>\r\n\ It\ validate\ value\ passed\ in\ and\ when\ if\ falls\ bellow\ MIN\ and\ above\ MAX\ year,\ error\ message\ is\ displayed;\r\n\ @param\ value\ of\ a\ year\ passed\ as\ Integer;\r\n
numComments=19
